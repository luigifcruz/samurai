Build started at 2021-01-16T23:07:45.764636
Main binary: /usr/bin/python
Build Options: -Dprefix=/home/luigi/Sandbox/webusb-libusb/build -Dlibdir=lib '--cross-file target/emscripten.txt'
Python system: Linux
The Meson build system
Version: 0.56.2
Source dir: /home/luigi/Sandbox/samurai
Build dir: /home/luigi/Sandbox/samurai/builddir
Build type: cross build
Project name: samurai
Project version: 1.0.0
None of 'CXXFLAGS' are defined in the environment, not changing global flags.
None of 'LDFLAGS' are defined in the environment, not changing global flags.
None of 'CPPFLAGS' are defined in the environment, not changing global flags.
Sanity testing C++ compiler: em++
Is cross compiler: True.
Sanity check compiler command line: em++ /home/luigi/Sandbox/samurai/builddir/meson-private/sanitycheckcpp.cc -o /home/luigi/Sandbox/samurai/builddir/meson-private/sanitycheckcpp_cross.exe -s WASM=1 -O2 -pipe -D_FILE_OFFSET_BITS=64 -c
Sanity check compile stdout:

-----
Sanity check compile stderr:

-----
C++ compiler for the host machine: em++ (emscripten 2.0.10 "emcc (Emscripten gcc/clang-like replacement) 2.0.10 (8fb6fc501244d0b5e4230e62bbe50a00ae075090)")
C++ linker for the host machine: em++ ld.wasm 12.0.0
None of 'CXX_FOR_BUILD' are defined in the environment, not changing global flags.
None of 'CXXFLAGS_FOR_BUILD' are defined in the environment, not changing global flags.
None of 'LDFLAGS_FOR_BUILD' are defined in the environment, not changing global flags.
None of 'CPPFLAGS_FOR_BUILD' are defined in the environment, not changing global flags.
None of 'CXX_LD_FOR_BUILD' are defined in the environment, not changing global flags.
Sanity testing C++ compiler: c++
Is cross compiler: False.
None of 'CXX_LD_FOR_BUILD' are defined in the environment, not changing global flags.
Sanity check compiler command line: c++ /home/luigi/Sandbox/samurai/builddir/meson-private/sanitycheckcpp.cc -o /home/luigi/Sandbox/samurai/builddir/meson-private/sanitycheckcpp.exe -pipe -D_FILE_OFFSET_BITS=64
Sanity check compile stdout:

-----
Sanity check compile stderr:

-----
Running test binary command: /home/luigi/Sandbox/samurai/builddir/meson-private/sanitycheckcpp.exe
C++ compiler for the build machine: c++ (gcc 10.2.0 "c++ (GCC) 10.2.0")
C++ linker for the build machine: c++ ld.bfd 2.35.1
None of 'AR_FOR_BUILD' are defined in the environment, not changing global flags.
Build machine cpu family: x86_64
Build machine cpu: x86_64
Host machine cpu family: x86_64
Host machine cpu: x86_64
Target machine cpu family: x86_64
Target machine cpu: x86_64
Run-time dependency threads found: YES
Pkg-config binary for MachineChoice.HOST is not cached.
Pkg-config binary for 1 specified from cross file, native file, or env var as ['pkg-config']
Found pkg-config: /usr/bin/pkg-config (1.7.3)
Determining dependency 'LimeSuite' with pkg-config executable '/usr/bin/pkg-config'
PKG_CONFIG_PATH: 
Called `/usr/bin/pkg-config --modversion LimeSuite` -> 1

CMake binary for MachineChoice.HOST is not cached
None of 'CMAKE' are defined in the environment, not changing global flags.
CMake binary missing from cross or native file, or env var undefined.
Default target is not allowed for cross use
Found CMake: NO
No CMake binary for machine 1 not found. Giving up.
Run-time dependency limesuite found: NO (tried pkgconfig and cmake)
Message: LimeSDR Enabled: NO
Pkg-config binary for MachineChoice.HOST is cached.
Determining dependency 'libairspy' with pkg-config executable '/usr/bin/pkg-config'
PKG_CONFIG_PATH: 
Called `/usr/bin/pkg-config --modversion libairspy` -> 0
1.0
PKG_CONFIG_PATH: 
Called `/usr/bin/pkg-config --cflags libairspy` -> 0
-I/usr/include/libairspy/ -I/usr/include/libusb-1.0
PKG_CONFIG_PATH: 
Called `/usr/bin/pkg-config libairspy --libs` -> 0
-L/usr/lib -lairspy
PKG_CONFIG_PATH: 
Called `/usr/bin/pkg-config libairspy --libs` -> 0
-lairspy
None of 'PKG_CONFIG_PATH' are defined in the environment, not changing global flags.
Running compile:
Working directory:  /home/luigi/Sandbox/samurai/builddir/meson-private/tmpbgo2aopc
Command line:  em++ /home/luigi/Sandbox/samurai/builddir/meson-private/tmpbgo2aopc/testfile.cpp -o /home/luigi/Sandbox/samurai/builddir/meson-private/tmpbgo2aopc/output.wasm -pipe -c -s WASM=1 -O2 -D_FILE_OFFSET_BITS=64 -O0 -fpermissive -Werror=unknown-warning-option -Werror=unused-command-line-argument 

Code:
 #include <stdio.h>
        
        int main(void) {
            void * something;
            return 0;
        }
Compiler stdout:
 
Compiler stderr:
 
Running compile:
Working directory:  /home/luigi/Sandbox/samurai/builddir/meson-private/tmp5cqyl6g3
Command line:  em++ /home/luigi/Sandbox/samurai/builddir/meson-private/tmp5cqyl6g3/testfile.cpp -o /home/luigi/Sandbox/samurai/builddir/meson-private/tmp5cqyl6g3/output.wasm -pipe -c -s WASM=1 -O2 -D_FILE_OFFSET_BITS=64 -O0 -fpermissive -Werror=unknown-warning-option -Werror=unused-command-line-argument 

Code:
 #include <stdio.h>
        
        int main(void) { static int a[1-2*!(sizeof(void *) >= 0)]; a[0]=0; return 0; }
Compiler stdout:
 
Compiler stderr:
 
Running compile:
Working directory:  /home/luigi/Sandbox/samurai/builddir/meson-private/tmpqpr2bohm
Command line:  em++ /home/luigi/Sandbox/samurai/builddir/meson-private/tmpqpr2bohm/testfile.cpp -o /home/luigi/Sandbox/samurai/builddir/meson-private/tmpqpr2bohm/output.wasm -pipe -c -s WASM=1 -O2 -D_FILE_OFFSET_BITS=64 -O0 -fpermissive -Werror=unknown-warning-option -Werror=unused-command-line-argument 

Code:
 #include <stdio.h>
        
        int main(void) { static int a[1-2*!(sizeof(void *) > 0)]; a[0]=0; return 0; }
Compiler stdout:
 
Compiler stderr:
 
Running compile:
Working directory:  /home/luigi/Sandbox/samurai/builddir/meson-private/tmp1mod9plw
Command line:  em++ /home/luigi/Sandbox/samurai/builddir/meson-private/tmp1mod9plw/testfile.cpp -o /home/luigi/Sandbox/samurai/builddir/meson-private/tmp1mod9plw/output.wasm -pipe -c -s WASM=1 -O2 -D_FILE_OFFSET_BITS=64 -O0 -fpermissive -Werror=unknown-warning-option -Werror=unused-command-line-argument 

Code:
 #include <stdio.h>
        
        int main(void) { static int a[1-2*!(sizeof(void *) > 1)]; a[0]=0; return 0; }
Compiler stdout:
 
Compiler stderr:
 
Running compile:
Working directory:  /home/luigi/Sandbox/samurai/builddir/meson-private/tmp_o36n_k6
Command line:  em++ /home/luigi/Sandbox/samurai/builddir/meson-private/tmp_o36n_k6/testfile.cpp -o /home/luigi/Sandbox/samurai/builddir/meson-private/tmp_o36n_k6/output.wasm -pipe -c -s WASM=1 -O2 -D_FILE_OFFSET_BITS=64 -O0 -fpermissive -Werror=unknown-warning-option -Werror=unused-command-line-argument 

Code:
 #include <stdio.h>
        
        int main(void) { static int a[1-2*!(sizeof(void *) > 3)]; a[0]=0; return 0; }
Compiler stdout:
 
Compiler stderr:
 
Running compile:
Working directory:  /home/luigi/Sandbox/samurai/builddir/meson-private/tmp41uwvjdw
Command line:  em++ /home/luigi/Sandbox/samurai/builddir/meson-private/tmp41uwvjdw/testfile.cpp -o /home/luigi/Sandbox/samurai/builddir/meson-private/tmp41uwvjdw/output.wasm -pipe -c -s WASM=1 -O2 -D_FILE_OFFSET_BITS=64 -O0 -fpermissive -Werror=unknown-warning-option -Werror=unused-command-line-argument 

Code:
 #include <stdio.h>
        
        int main(void) { static int a[1-2*!(sizeof(void *) > 7)]; a[0]=0; return 0; }
Compiler stdout:
 
Compiler stderr:
 /home/luigi/Sandbox/samurai/builddir/meson-private/tmp41uwvjdw/testfile.cpp:3:39: error: 'a' declared as an array with a negative size
        int main(void) { static int a[1-2*!(sizeof(void *) > 7)]; a[0]=0; return 0; }
                                      ^~~~~~~~~~~~~~~~~~~~~~~~~
1 error generated.
em++: error: '/opt/emscripten-llvm/bin/clang++ -DEMSCRIPTEN -fignore-exceptions -mllvm -combiner-global-alias-analysis=false -mllvm -enable-emscripten-sjlj -mllvm -disable-lsr -Xclang -isystem/usr/lib/emscripten/system/include/SDL -target wasm32-unknown-emscripten -D__EMSCRIPTEN_major__=2 -D__EMSCRIPTEN_minor__=0 -D__EMSCRIPTEN_tiny__=10 -D_LIBCPP_ABI_VERSION=2 -Dunix -D__unix -D__unix__ -Werror=implicit-function-declaration --sysroot=/usr/lib/emscripten/system -Xclang -isystem/home/luigi/.emscripten_cache/wasm/include -Xclang -iwithsysroot/include/libcxx -Xclang -iwithsysroot/lib/libcxxabi/include -Xclang -iwithsysroot/include/compat -Xclang -iwithsysroot/include/libc -Xclang -iwithsysroot/lib/libc/musl/arch/emscripten -Xclang -iwithsysroot/local/include -Xclang -iwithsysroot/include/SSE -Xclang -iwithsysroot/include/neon -Xclang -iwithsysroot/lib/compiler-rt/include -Xclang -iwithsysroot/lib/libunwind/include -o /home/luigi/Sandbox/samurai/builddir/meson-private/tmp41uwvjdw/output.wasm -pipe -c -O2 -D_FILE_OFFSET_BITS=64 -O0 -fpermissive -Werror=unknown-warning-option /home/luigi/Sandbox/samurai/builddir/meson-private/tmp41uwvjdw/testfile.cpp -c -o /home/luigi/Sandbox/samurai/builddir/meson-private/tmp41uwvjdw/output.wasm' failed (1)

Running compile:
Working directory:  /home/luigi/Sandbox/samurai/builddir/meson-private/tmp8akcrpzw
Command line:  em++ /home/luigi/Sandbox/samurai/builddir/meson-private/tmp8akcrpzw/testfile.cpp -o /home/luigi/Sandbox/samurai/builddir/meson-private/tmp8akcrpzw/output.wasm -pipe -c -s WASM=1 -O2 -D_FILE_OFFSET_BITS=64 -O0 -fpermissive -Werror=unknown-warning-option -Werror=unused-command-line-argument 

Code:
 #include <stdio.h>
        
        int main(void) { static int a[1-2*!(sizeof(void *) <= 5)]; a[0]=0; return 0; }
Compiler stdout:
 
Compiler stderr:
 
Running compile:
Working directory:  /home/luigi/Sandbox/samurai/builddir/meson-private/tmp4undy7yf
Command line:  em++ /home/luigi/Sandbox/samurai/builddir/meson-private/tmp4undy7yf/testfile.cpp -o /home/luigi/Sandbox/samurai/builddir/meson-private/tmp4undy7yf/output.wasm -pipe -c -s WASM=1 -O2 -D_FILE_OFFSET_BITS=64 -O0 -fpermissive -Werror=unknown-warning-option -Werror=unused-command-line-argument 

Code:
 #include <stdio.h>
        
        int main(void) { static int a[1-2*!(sizeof(void *) <= 4)]; a[0]=0; return 0; }
Compiler stdout:
 
Compiler stderr:
 
Running compile:
Working directory:  /home/luigi/Sandbox/samurai/builddir/meson-private/tmp6mmom3ja
Command line:  em++ /home/luigi/Sandbox/samurai/builddir/meson-private/tmp6mmom3ja/testfile.cpp -o /home/luigi/Sandbox/samurai/builddir/meson-private/tmp6mmom3ja/output.wasm -pipe -c -s WASM=1 -O2 -D_FILE_OFFSET_BITS=64 -O0 -fpermissive -Werror=unknown-warning-option -Werror=unused-command-line-argument --print-search-dirs 

Code:
 
Compiler stdout:
 programs: =/opt/emscripten-llvm/bin
libraries: =/opt/emscripten-llvm/lib/clang/12.0.0:/usr/lib/emscripten/system/lib/wasm32-emscripten

Compiler stderr:
 Traceback (most recent call last):
  File "/usr/lib/emscripten/em++.py", line 14, in <module>
    sys.exit(emcc.run(sys.argv))
  File "/usr/lib/emscripten/emcc.py", line 2070, in run
    compile_source_file(i, input_file)
  File "/usr/lib/emscripten/emcc.py", line 2064, in compile_source_file
    assert os.path.exists(output_file)
AssertionError

Run-time dependency libairspy found: YES 1.0
Message: /home/luigi/Sandbox/webusb-libusb/build
Message: lib
Message: Airspy Enabled: YES
Configuring config.hpp using configuration
Build targets in project: 1

Option prefix is: /home/luigi/Sandbox/webusb-libusb/build [default: /usr]
Found ninja-1.10.2 at /usr/bin/ninja
Running compile:
Working directory:  /tmp/tmp1ios91kf
Command line:  em++ /tmp/tmp1ios91kf/testfile.cpp -o /tmp/tmp1ios91kf/output.wasm -pipe -D_FILE_OFFSET_BITS=64 -c -std=c++17 

Code:
 int i = static_cast<int>(0);
Compiler stdout:
 
Compiler stderr:
 
Compiler accepts -std=c++17: YES
None of 'STRIP' are defined in the environment, not changing global flags.
WARNING: Cross file does not specify strip binary, result will not be stripped.
None of 'STRIP' are defined in the environment, not changing global flags.
WARNING: Cross file does not specify strip binary, result will not be stripped.
